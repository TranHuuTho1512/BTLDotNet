<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>